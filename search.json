[{"title":"Hello World","url":"/posts/4a17b156/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":["Hexo"],"tags":["Hexo"]},{"title":"MathJax Test","url":"/posts/b67f0825/","content":"\n","categories":["MathJax"],"tags":["MathJax"]},{"title":"开源IPTV源服务程序使用教程","url":"/posts/cb914493/","content":"Streaming-Media-Server-Pro前言&amp;emsp;&amp;emsp;我的目标是将程序打造成属于每个人的直播源服务，且对每个人完全开源免费！可作为家庭影院电视、视频等流媒体的提供商，兼容全平台，只需下载视频播放器调用接口链接即可享用，不多说开始喽。\n开源程序介绍点击跳转部署教程 by Naihe一键部署教程：https://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=8252305详细部署教程：https://www.cnblogs.com/1314h/p/16651157.html免费公益接口：https://stream.naihe.cf/docs\n请不要对接口进行路径扫描，访问&#x2F;docs接口文档查看所有可用路径\n该教程是我呕心沥血写成，使用教程包括程序部署和每个接口使用说明等，尽量保证每个人都会使用，部署总结概括需要做到以下及几点：\n\n安装python或者docker（二选一必装）\n安装PostgreSql或者MySQL数据库（二选一推荐安装）\n安装Redis数据库（可选安装）\n一定的耐心（看完下面详细的教程）\n\n先说明我的配置\n服务器1：1G内存+10G存储，mysql数据库，redis数据库\n分布式下载5台\n   下载 ts + 上传数据库 ~ 1s时间\n最近在256M内存VPS部署该程序，经测试也可以正常运行\n以上仅供参考，程序对配置要求不高，实际使用1台服务器即可使程序正常运行。\n服务器位置最好在香港、日本等物理距离近的地方，尽量不要选择国内主机。\n一键部署Python和Docker二选一安装\n安装Python运行（二选一，必选）Python版本推荐3.9+\n安装Python很简单，避免篇幅冗长请自行百度，相信凭各位能力可以解决；该项是程序的核心支撑服务，一定要安装！\n安装好Python后看下面\n命令终端执行git clone https://github.com/239144498/Streaming-Media-Server-Pro.git\n\n安装python环境依赖pip install -r requirements.txt\n\n让程序跑起来python main.py浏览器访问：http://ip:8080/docs\n\n安装Docker运行（二选一，必选）Docker项目地址：https://hub.docker.com/r/239144498/streaming\n安装Docker很简单，避免篇幅冗长请自行百度，相信凭各位能力可以解决；该项是程序的核心支撑服务，一定要安装！\n安装好Docker后看下面\n拉取镜像docker pull 239144498/streaming\n\n查看镜像docker images获取 IMAGE_ID\n让程序跑起来以下二选一执行\n1、非挂载目录运行（新手推荐）docker run -itd -p 8080:8080 --restart=always --name server 这里输入上一步的IMAGE_ID  浏览器访问：http://ip:8080/docs\n\n2、挂载目录运行（主机与容器目录共享）创建存放配置文件的文件夹mkdir /home/assets\n\n创建并编辑config.ini文件vim config.ini\t\n\n\n按i再输入你的配置文件内容，完成后ESC 输入”:wq!“回车\n\ndocker run -itd -v /home/assets:/code/app/assets -p 8080:8080 --restart=always --name server 这里输入上一步的IMAGE_ID  浏览器访问：http://ip:8080/docs\n\n程序额外功能自定义IPTV源该程序支持自定义源，如果你有其他iptv源，可以添加到该程序中，在app&#x2F;assets&#x2F;diychannel.txt文件中添加你的频道，如下图：\n\nPs：使用Docker 需要把文件放到本机的&#x2F;home&#x2F;assets目录\n添加后使用&#x2F;program.m3u接口就可以看到自己的IPTV源啦。\n挂载配置文件做这个功能是为了解决Docker中config.ini文件重复配置问题，比如Docker镜像重新安装后可以读取挂载目录中已配置好的config.ini文件到容器中，减少不必要操作。\n Ps： 在Docker中自定义IPTV源也是把文件放到本机的&#x2F;home&#x2F;assets目录\n创建存放配置文件的文件夹mkdir /home/assets\n\n进入文件夹cd /home/assets\n\n创建并编辑config.ini文件vim config.ini\t\n\n\n按i再输入你的配置文件内容，完成后ESC 输入”:wq!“回车\n\n进阶操作*下面操作都是可选的，愿意掌握程序更多功能往下看\nConfig.ini文件配置（可选）config.ini配置文件可以保持默认不用修改\n&#x3D;&#x3D;Config.ini文件在程序路径.app&#x2F;assets&#x2F;config.ini&#x3D;&#x3D;\n根据实际情况配置参数，例如安装了MySQL，在config.ini更改为你的参数即可，PostgreSql数据库类似填写，不懂就不修改。\n[default]# defaultdb 选择参数：mysql | postgresql | 留空则不连接数据库defaultdb =[mysql]# 将下列5行改为你的参数host     = 192.168.1.x \t# ip地址user     = root\t# 用户名password = 123456789\t# 密码port     = 3306\t# 端口database = media\t# 数据库名\n\n设置外网访问：你的ip+端口 或者 域名 + 端口\n# 你的外网映射端口号，默认8080port = 8080# 修改192.168.1.x为你的ip或域名localhost = http://192.168.1.x:%(port)s\n\n视频下载选项，部署了分布式下载选online，否则选local，该前提是已安装数据库\n# downchoose参数：local | onlinedownchoose = local\n\n&#x3D;&#x3D;部署分布式代码下载，你需要点击跳转部署(前提：需要在线托管服务，或者主机)&#x3D;&#x3D;\n免费托管服务推荐：\npythonanywhere：https://www.pythonanywhere.com\nheroku：https://www.heroku.com\n\n免费redis：https://console.upstash.com\n设置视频缓冲区，安装了数据库看这里\n# 视频缓冲区大小，local推荐2-3，online推荐4-5# 实际根据网络带宽和计算机性能决定vbuffer = 3# 分布式视频下载器# local示例[&quot;https://&quot;+localhost+&quot;/url3?url=&quot;, ...]# online示例[&quot;https://www.example1.com/url3?url=&quot;, ...]# 有多个分布式下载链接使用方法如下，否则参数不要改downurls = [&quot;%&#123;localhost&#125;s/url3?url=&quot;,            &quot;https://www.example1.com/url3?url=&quot;,            &quot;https://www.example2.com/url3?url=&quot;,...]\n\n更多Config.ini配置（可选）程序默认使用我提供的EPG节目单（每日会自动更新），如果你需要创建该脚本，需要在config.ini配置文件提供xmlowner、xmlrepo、xmlaccess_token这三个参数。\n# 存放节目单仓库xmlowner = 用户名xmlrepo = 仓库名xmlaccess_token = token\n\n下面是进阶操作，不懂就不修改。\n[advanced]host1 = 4gtvfreepc-cds.cdn.hinet.nethost2 = 4gtvfree-cds.cdn.hinet.net# tvglogo可选参数：fsLOGO_MOBILE 台标 | fsHEAD_FRAME 播放预览tvglogo = fsHEAD_FRAME# 对所有接口启用代理，没有就不用配置# 代理有身份验证： http://user:password@10.10.1.10:3128# 代理无身份验证： http://10.10.1.10:3128proxies =\n\n安装Mysql（建议安装）&#x3D;&#x3D;要求Mysql版本5.1.6+&#x3D;&#x3D;\n安装Mysql很简单，避免篇幅冗长请自行百度，相信凭各位能力可以解决；完成后可开启视频缓冲区功能，不安装就跳到第二步\n开启Mysql后看下面\n执行以下sql命令创建数据库CREATE DATABASE media\n\n创建video表create table media.video(    vname varchar(30) not null,    CONSTRAINT video_pk PRIMARY KEY (vname),    vcontent  MEDIUMBLOB NOT NULL,    vsize varchar(20) NULL,    ctime  timestamp(0) default now());\n\n设置定时删除事件SET GLOBAL event_scheduler = ON;\t# 开启事件调度器\n\nuse media;\n\nDROP event IF EXISTS auto_delete;CREATE EVENT auto_deleteON SCHEDULE EVERY 30 minute     # xx分钟根据数据库的存储和查询性能综合决定DOTRUNCATE video;\n\n最后在Streaming-Media-Server-Pro&#x2F;app&#x2F;assets&#x2F;config.ini  配置文件中改成你的ip、port等参数安装Redis（可选安装）安装Redis很简单，避免篇幅冗长请自行百度，相信凭各位能力可以解决；完成后可缓存参数，解决重启服务数据丢失问题，且方便多服务共享数据。\n我在程序中设置了以内存作为缓存，所以也可以不安装，但缺点就是重启服务数据丢失。\n开启Redis后看下面\n开启了ssl需要在代码中的ssl设置true，默认false\n最后在Streaming-Media-Server-Pro&#x2F;app&#x2F;assets&#x2F;config.ini  配置文件中改成你的ip、port等参数Docker扩展操作查看容器运行状态docker ps -a\n\n查看容器资源使用情况docker stats\n\n查看容器内部的标准输出docker logs [ID或者名字]\n\n进入容器命令终端docker ps -a找到 containerIDdocker exec -it 这里填containerID /bin/bash\n\n查看端口开放状态netstat -anp | grep 8080\n\n重启容器docker restart IMAGE_ID\n\n删除容器docker restart CONTAINER_ID\n删除镜像docker restart IMAGE_ID\n\n完整Config.ini配置信息# 先看教程，不懂就不要乱改参数，后果将导致程序运行出错！[default]# defaultdb 可选参数：mysql | postgresql | 不连接数据库则留空defaultdb =# downchoose 可选参数：local | onlinedownchoose = local# 你的外网映射端口号，默认8080port = 8080# 修改192.168.1.x为你的ip或域名localhost = # vbuffer视频缓冲区大小，downchoose：local推荐2-3，online推荐4-5，实际根据通信带宽和计算机性能决定vbuffer = 3# 以下3个参数不懂就不要动downurls = [&quot;%(localhost)s/url3?url=&quot;]# 进阶操作，默认不用改[advanced]host1 = 4gtvfreepc-cds.cdn.hinet.nethost2 = 4gtvfree-cds.cdn.hinet.net# tvglogo可选参数：fsLOGO_MOBILE 台标 | fsHEAD_FRAME 播放预览tvglogo = fsHEAD_FRAME# 对所有接口启用代理，没有就不用配置# 代理有验证： http://user:password@10.10.1.10:3128 | 代理无验证： http://10.10.1.10:3128proxies =[mysql]host     = 192.x.91.34user     = rootpassword = 123456789port     = 3306database = media[postgresql]host     = 192.x.91.34user     = rootpassword = 123456789port     = 5432database = media[redis]host     = 192.x.91.34port     = 6379password = 123456789[other]# 存放节目单厂库xmlowner =xmlrepo =xmlaccess_token =# 接口限制指定ip，默认使用我提供的接口\n\n接口使用教程可以访问 https://stream.naihe.cf/docs 接口文档\nGET &#x2F;online.m3u8请求参数\n\n\n参数名\n位置\n类型\n必填\n说明\n\n\n\nhost\nquery\nstring\n否\n反向代理域名，例http://www.example.com\n\n\nfid\nquery\nstring\n是\n频道参数，例4gtv-4gtv018\n\n\nhd\nquery\nstring\n否\n视频清晰度，可选360、480、720、1080\n\n\n实例请求：http://127.0.0.1:8080/online.m3u8?fid=4gtv-4gtv018&amp;hd=720&amp;host=http://www.example.com\nhost参数用于反向代理，解决本地部署且未挂梯子工具问题，怎么部署反代自行百度\n介绍：客户端请求后将多个ts下载到数据库作为缓冲区，下次客户端请求call.ts就从数据库读取。\nGET &#x2F;call.ts请求参数\n\n\n参数名\n位置\n类型\n必填\n说明\n\n\n\nfid\nquery\nstring\n是\n频道参数，例4gtv-4gtv018\n\n\nseq\nquery\nstring\n是\n60466177，由&#x2F;online.m3u8自动产生\n\n\nhd\nquery\nstring\n是\n视频清晰度，可选360、480、720、1080\n\n\n实例请求：http://127.0.0.1:8080/call.ts?fid=litv-longturn11&amp;seq=60466177&amp;hd=1080\n介绍：从数据库读取视频返回给客户端。\nGET &#x2F;channel.m3u8请求参数\n\n\n参数名\n位置\n类型\n必填\n说明\n\n\n\nhost\nquery\nstring\n否\n反向代理域名，例http://www.example.com\n\n\nfid\nquery\nstring\n是\n频道参数，例4gtv-4gtv018\n\n\nhd\nquery\nstring\n否\n视频清晰度，可选360、480、720、1080\n\n\n实例请求：http://127.0.0.1:8080/channel.m3u8?fid=4gtv-4gtv018&amp;hd=720&amp;host=http://www.example.com\n介绍：客户端请求后生成视频链接参数，下次客户端请求&#x2F;live&#x2F;{file_path}接口默认本机反代，或者使用host参数作为反代，同时起到分流作用，减轻服务器压力。\nGET &#x2F;channel2.m3u8请求参数\n\n\n参数名\n位置\n类型\n必填\n说明\n\n\n\nfid\nquery\nstring\n是\n频道参数，例4gtv-4gtv018\n\n\nhd\nquery\nstring\n否\n视频清晰度，可选360、480、720、1080\n\n\n实例请求：http://127.0.0.1:8080/channel2.m3u8?fid=4gtv-4gtv018&amp;hd=720\n介绍：重定向视频链接给客户端。\nGET &#x2F;program.m3u请求参数\n\n\n参数名\n位置\n类型\n必填\n说明\n\n\n\nhost\nquery\nstring\n否\n反向代理域名，例http://www.example.com\n\n\nhd\nquery\nstring\n否\n视频清晰度，可选360、480、720、1080\n\n\nname\nquery\nstring\n否\n频道参数，例4gtv-4gtv018\n\n\n实例请求：http://127.0.0.1:8080/program.m3u?&amp;hd=720&amp;host=http://www.example.com\n介绍：返回4gtv全部频道表，兼容手机平板电脑全平台，例如用potplayer播放器使用。\nGET &#x2F;EPG.xml请求参数无\n实例请求：http://127.0.0.1:8080/EPG.xml\n介绍：返回所有频道未来3天将播放哪些节目\nGET &#x2F;live&#x2F;{file_path}请求参数\n\n\n参数名\n位置\n类型\n必填\n说明\n\n\n\nfile_path\npath\nstring\n是\n视频url路径\n\n\ntoken1\nquery\nstring\n否\ntoken，例FzwRIP1td0zsoDAfEz9\n\n\nexpires1\nquery\ninteger\n否\nexpires，例1661951225\n\n\n实例请求：http://127.0.0.1:8080/live/pool/4gtv-live012/4gtv-live-mid/7201661716300.ts?token1=FzwRIP1td0zsoDAfEz9-bg&amp;expires1=1661951225\n介绍：代理下载视频返回给客户端\n❤ 打赏 Donation\n&emsp;&emsp;如果你觉得本项目对你有帮助，请考虑打赏本项目，以激励我投入更多的时间进行维护与开发。 If you find this project helpful, please consider supporting the project going forward. Your support is greatly appreciated.\n\n&emsp;&emsp;你在GitHub给的star或者赞助是我长期维护此项目的动力所在，由衷感谢每一位支持者，&ldquo;每一次你花的钱都是在为你想要的世界投票&rdquo;。 另外，将本项目推荐给更多的人，也是一种支持的方式，用的人越多更新的动力越足。\n","categories":["python"],"tags":["iptv","python","fastapi"]}]